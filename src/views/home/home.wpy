<template lang="pug">
    view.container
        view.home_bg
            image(
                src="/images/home_bg.png"
            )
        view.identification_box.ac
            button.identification_btn(
                wx:for="{{classify}}"
                wx:key="this"
                open-type="getUserInfo"
                @getuserinfo="photograph({{item.type}})"
            ) {{item.name}}
</template>

<script>
    import wepy from 'wepy'
    import {
        login,
        setUserInfo
    } from '@/service/api/user'
    import {
        getRecognition,
    } from '@/service/api/identification'
    import {
        showModal
    } from '@/utils'
    export default class Home extends wepy.page {
        config = {
            navigationBarTitleText: '识别AI',
            // 页面禁止右滑返回手势
            disableSwipeBack: true,
            enablePullDownRefresh: false
        }
        methods = {
            async photograph(type = 'plant', {
                detail
            }) {
                try {
                    if(!detail.userInfo) throw {code: 7500, data:[], info: '要授权才能使用哦！'}
                    await setUserInfo(detail.userInfo)
                    let {
                        tempFilePaths
                    }  = await wepy.chooseImage({
                        count: '1', //最多可以选择的图片张数
                        sizeType: ['original', 'compressed'],
                        sourceType: ['album', 'camera'],
                    })
                    let id = await getRecognition(tempFilePaths[0], type)
                    this.$navigate(`/views/my/record_details`, {
                        id
                    })
                } catch (error) {
                    console.log(error)
                    if(error.code) {
                        showModal({
                            title: '提示',
                            content: `${error.info}`,
                            showCancel: false, //是否显示取消按钮,
                        })
                    }
                } finally {
                    this.$apply()
                }
            }
        }
        data = {
            classify: [{
                name: '动物识别',
                type: 'animal'
            },{
                name: '植物识别',
                type: 'plant'
            },{
                name: '菜品识别',
                type: 'dish'
            },{
                name: '文字识别',
                type: 'ocr'
            }]
        }
        onShareAppMessage(res) {
            if (res.from === 'button') {
                console.log(res.target)
            }
            return {
                title: '神器AI',
                path: `/views/home/home`
            }
        }
        async onLoad() {
            try {
                let data = await login()
                console.log(data)
            } catch (error) {
                console.log(error)
            }
        }
    }
</script>

<style lang="stylus">
    .home_bg
        position fixed
        top 0
        left 0
        right 0
        bottom 0
        image
            width 100%
            height 100%
    .identification_box
        position fixed
        top 50%
        left 50%
        transform translate(-50%, -50%)
        .identification_btn
            margin 0 auto
            height 98px
            width 400px
            line-height 98px
            font-size 40px
            font-weight 700
            color #fff
            border-radius 98px
            background linear-gradient(rgba( 15, 145, 131, .7), rgba( 0, 217, 188, .7))
            &:not(:first-child)
                margin-top 24px
</style>
